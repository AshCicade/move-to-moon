import{_ as t,c as e,a1 as i,o as s}from"./chunks/framework.CtAjElTc.js";const n="/move-to-moon/assets/image.CXZq4WEW.png",k=JSON.parse('{"title":"路由模式","description":"","frontmatter":{},"headers":[],"relativePath":"guides/消息中间件/rabbitmq/routing.md","filePath":"guides/消息中间件/rabbitmq/routing.md"}'),r={name:"guides/消息中间件/rabbitmq/routing.md"};function o(l,a,h,d,p,c){return s(),e("div",null,a[0]||(a[0]=[i('<h1 id="路由模式" tabindex="-1">路由模式 <a class="header-anchor" href="#路由模式" aria-label="Permalink to &quot;路由模式&quot;">​</a></h1><p>发布/订阅中，构建的简单的日志系统，可以实现将消息广播给所有接收者。 路由模式，则是在此基础上添加一个特性--只订阅消息的子集。例如，我们可以将关键错误消息传递给日志文件，同时能够在控制台打印所有日志消息。</p><h2 id="绑定" tabindex="-1">绑定 <a class="header-anchor" href="#绑定" aria-label="Permalink to &quot;绑定&quot;">​</a></h2><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">channel.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">queueBind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(queueName, EXCHANGE_NAME, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="直接交换" tabindex="-1">直接交换 <a class="header-anchor" href="#直接交换" aria-label="Permalink to &quot;直接交换&quot;">​</a></h2><p><img src="'+n+'" alt="alt text"></p>',6)]))}const m=t(r,[["render",o]]);export{k as __pageData,m as default};
